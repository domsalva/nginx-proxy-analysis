# Copyright © 2022 Kris Nóva <nova@nivenly.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

user root;
daemon off;
error_log  /var/log/nginx-proxy-analysis/error.log;

# Defines the number of worker processes.
#
# The optimal value depends on many factors including (but not limited to) the number of CPU cores,
# the number of hard disk drives that store data, and load pattern. When one is in doubt, setting it
# to the number of available CPU cores would be a good start (the value “auto” will try to autodetect it).
#
# Source: http://nginx.org/en/docs/ngx_core_module.html#worker_processes
worker_processes  1;

events {
    # Sets the maximum number of simultaneous connections that can be opened by a worker process.
    #
    # It should be kept in mind that this number includes all connections
    # (e.g. connections with proxied servers, among others), not only connections with clients.
    # Another consideration is that the actual number of simultaneous connections cannot exceed
    # the current limit on the maximum number of open files, which can be changed by worker_rlimit_nofile.
    #
    # Source: http://nginx.org/en/docs/ngx_core_module.html#worker_connections
    worker_connections  256; # Note: this should be greater than the value of requests in /traffic
}

http {

    # The first parameter sets a timeout during which a keep-alive client connection will stay open on the server side.
    #
    # Source: http://nginx.org/en/docs/http/ngx_http_core_module.html#keepalive_timeout
    keepalive_timeout  10;

    # Enables or disables buffering of responses from the proxied server.
    #
    # When buffering is enabled, nginx receives a response from the proxied server as soon as possible,
    # saving it into the buffers set by the proxy_buffer_size and proxy_buffers directives. If the whole
    # response does not fit into memory, a part of it can be saved to a temporary file on the disk.
    # Writing to temporary files is controlled by the proxy_max_temp_file_size and proxy_temp_file_write_size
    # directives.
    #
    # Source: http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffering
    proxy_buffering off;

    # Upstream unix domain socket which all upstream .c programs are configured to match.
    upstream case-upstream {
        server unix:/var/run/nginx-proxy-analysis.sock;
    }

    # Define the proxy server.
    #
    # Listen on TCP port 80 and proxy to upstream Unix domain socket.
    server {
        listen       80;
        server_name  localhost;
        location / {
            proxy_pass http://case-upstream;
        }
        location = /stats {
            stub_status;
        }
    }

    # Other parameters
    default_type       application/octet-stream;
    access_log         /var/log/nginx-proxy-analysis/access.log;
    sendfile           on;
}
