#!/bin/bash
# Copyright © 2022 Kris Nóva <nova@nivenly.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
set -e

# Check if running as root user
if [ "$EUID" -ne 0 ]; then
  echo ""
  echo "--------------------"
  echo "Permission denied."
  echo "--------------------"
  echo ""
  echo "Please run as privileged user ID 0 (Root user, with sudo)."
  echo ""
  exit
fi

FILE=./src/upstream-basic-server-tcp
if [ -f "$FILE" ]; then
  echo "Compile check passeed."
else
    echo ""
    echo "--------------------"
    echo "Missing executable."
    echo "--------------------"
    echo ""
    echo "Please run 'make upstream' to build the servers to test against."
    echo ""
    exit
  exit
fi

# Initialize the test
echo " --> [Test] Clearing existing logs"
rm -rf /var/log/nginx-proxy-analysis/* # Clear the dashboard data
mkdir -p /var/log/nginx-proxy-analysis
touch /var/log/nginx-proxy-analysis/error.log
touch /var/log/nginx-proxy-analysis/access.log

# Load the Dashboard
echo " --> [Test] GoAccess dashboard..."
./dashboard &

# Load the Proxy server
echo " --> [Test] Launching proxy server..."
./proxy &

# Wait for the services to start
sleep 1


# ===========================================================================
echo " --> Case: Server works as expected, always returns HTTP 200"
./src/upstream-basic-server-unix &
CASEPID=$!
echo "-------------------------------"
echo "upstream-basic-server-unix"
echo "PID $CASEPID"
echo "-------------------------------"
./traffic
read -p "Press any key to continue"
kill -9 $CASEPID
# ===========================================================================


# ===========================================================================
echo " --> Case: Server create socket, but does not call accept()"
./src/upstream-server-not-accept-unix &
CASEPID=$!
echo "-------------------------------"
echo "upstream-server-not-accept-unix"
echo "PID $CASEPID"
echo "-------------------------------"
./traffic
read -p "Press any key to continue"
kill -9 $CASEPID
# ===========================================================================


# ===========================================================================
echo " --> Case: Server create socket, call accept(), but does not call read()"
./src/upstream-server-accept-not-read-unix &
CASEPID=$!
echo "-------------------------------"
echo "upstream-server-accept-not-read-unix"
echo "PID $CASEPID"
echo "-------------------------------"
./traffic
read -p "Press any key to continue"
kill -9 $CASEPID
# ===========================================================================


# ===========================================================================
echo " --> Case: Server create socket, call accept(), call read() but does not call write()"
./src/upstream-server-accept-read-not-write-unix &
CASEPID=$!
echo "-------------------------------"
echo "upstream-server-accept-read-not-write-unix"
echo "PID $CASEPID"
echo "-------------------------------"
./traffic
read -p "Press any key to continue"
kill -9 $CASEPID
# ===========================================================================


# Exit
echo ""
pkill -f -9 nginx
pkill -f -9 goaccess
echo ""
echo "Finished." 
exit 0
